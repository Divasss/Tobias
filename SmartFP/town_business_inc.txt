unit town_business_inc;
interface



//function WalkPathFromFile(fileName: string): Boolean;
function DepositToWarehouse(control: Tl2Control): Boolean;

implementation
uses
SysUtils, Classes, fp_math_inc, Ai_Classic_Inc, file_handling;

type
TTown = (None, Aden, Giran, HuntersVillage);

function DepositToWarehouse(control: Tl2Control): Boolean;
var
depositList: TStringList;
i, j, curId, count: Integer;
oWh: Tl2Live;
controlUser: Tl2User;
ItemIdList: array of cardinal;
oItem: Tl2Item;
invtry: TInventory;
begin
	result := false;
	
	controlUser := control.GetUser;
	depositList := TStringList.Create;
	if not (LoadAutonomousFile_ToList('WhDepositList.txt', depositList)) then exit;
	
	oWh := GetNearestWhKeeper(control);
	if (oWh = nil) then exit;
	
	control.SetTarget(oWh);
	control.MoveToTarget(-75);
	invtry := control.GetInventory;
	
	//Get array length
	count := 0;
	for i := 0 to depositList.Count - 1 do begin
		curId := StrToIntDef(depositList[i], 0);
		if curId = 0 then continue;
		
		if invtry.User.ById(curId, oItem) then begin
			count := count + 2;
			Print(IntToStr(oItem.Count) + 'x ' + oItem.Name + ' will be stored in warehouse');
		end;
	end;
	
	SetLength(ItemIdList, count);
	//Make ItemIdList
	j := 0;
	for i := 0 to depositList.Count - 1 do begin
		curId := StrToIntDef(depositList[i], 0);
		if curId = 0 then continue;
		
		if invtry.User.ById(curId, oItem) then begin
			ItemIdList[j] := curId;
			ItemIdList[j+1] := oItem.Count;
			j := j + 2;
		end;
	end;	
	
	Delay(1000);
	if control.DlgOpen() then begin
		delay(1000);
		control.DlgSel(1);
		Delay(2000);
		control.DlgSel(1);
		Delay(4000);
		result := control.LoadItems(true, ItemIdList);
	end;
end;



function GetNearestWhKeeper(control: Tl2Control): Tl2Live;
var
curTown: TTown; 
oWh: Tl2Live;
begin
	result := nil;
	
	curTown := GetCurrentTTown(control);
	if curTown = None then exit;
	if curTown = Aden then begin
		if not(control.GetUser.InRange(148238, 26263, -2216, 150)) then exit;
		if not control.GetNpcList.ById(30844, oWH) then exit;
		if (oWh = nil) then Exit;
		result := oWh;
	end;
end;

function GetCurrentTTown(control: Tl2Control): TTown;
var
controlUser: Tl2User;
begin
	result := None;
	controlUser := control.GetUser();
	if (controlUser = nil) then Exit;
	
	if (controlUser.InRange(147416, 25715, -2015, 8000)) then result := Aden //Aden
	//else if (User.InRange(81550, 54786, -1504, 5000)) then result := true //Oren
	else if (controlUser.InRange(117067, 76851, -2696, 5000)) then result := HuntersVillage //Hunters
	else if (controlUser.InRange(82331, 148615, -3470, 8000)) then result := Giran; //Giran
	//else if (User.InRange(17372, 145095, -3070, 4300)) then result := true //Dion
	//else if (User.InRange(-14213, 123675, -3144, 3000)) then result := true //Gludio
	//else if (User.InRange(-81726, 152729, -3174, 5000)) then result := true; //Gludin
end;



end.