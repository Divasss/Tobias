(*

	add tyrant aoe for pvp

	If song bubble doesnt flag caster, change utility chars with sws/bd... 

	Focus single target, when command is sent, get the Id of the mob of the leader. Test if Oid is same from both computers
	When single target, set melee parties to pve, and mage parties to protect pvp
	
	Focus mob mode			- Only attack one specific mob
	Single Target mode 		- dont use any aoe
	
	mby create 4th pt? fighter
	
	stack gear on fighter parties
	

	Test Engine.Entry
	and the OnEntry events.
		
	
	TESTING MoveTo_AoePoint_Continuous instead of MoveTo_AoePoint_WaitForFinish


	song bubbles interupt, or not casting?

	can flagged bishop make rbf? no?

	test if we can detect script stopped/ERROR and restart it from other control
	
	DONE? 	ALFA OMEGA
			get out of party buffer
				- if our utility char is flagged, and out oop buffer is not, kick utility, inv buffer
				Use oop buffer when, number of buffs missing on anyone is greater than 4, and our buffer is flagged.

	
	DONE? TEST!	For epics mainly:
				If leader disappears from CharList, follow to last known location, if distance is greater than 3-4k
				GG!


	DONE?	ADD ITEMS TO PRIORITY DROP LIST!!!=!=!=!=!!??!?!
	missing AQ ring
	
		
	//After tw lose ToDos:
		
		Make pickup command, and spread members to each drop.
		MISSING: if less drops than member count, put more members at same drops, (most important)
		
		Check: Cleanse and rez.
		
		CLEANSE: Healer1 will cleanse own party and sub party.
		
		
				EVERYONE should interupt DOD!!!!!!
		some should interupt all bubles
		
		db uses magic to hit?
		
		finish IsTarget_CastingLessImportantSkill and GetTarget_ToRez_ByExceptions
		TEST HandleResurrection_Healer1Only
		
		
		if main healer not here, someone else do controls
		
		Rezzing:
		Find first healer not casting a spell
		AND instead of finding healer and then rez target. THEN find target to rez, and then find closest healer.
		
		- make 
		
		- only mass rez when amount of deads are twice the amount of able healers, duoParty or not
		
		- dont rez dod targets, check if Target.Buffs.ById works on non party but controlled players
		- make boss mode, target one mob, and slh should use death mark on it
		- Interupt enemy bubbles
		- create DOD and bubble commands
		- create "Take flags" command for tyrants?

		


	:- Git Version

	To Do List: 	
			Start to use:
				EvaluateLive_ToAgro etc?
			
			
			Complete IsTarget_BubbleObject
				with the id of the npcs that are bubbles we should run from
			
			
			Add Paralysis to DisabledEffectsList file
			Change movement for MoveToAoeCenter
			
			
			Top priority:
					(Idle only)
					{
						More OL Debuff Skills, 
						Individual Buff Items?
						Re-arrange parties, in order to bring oop buffer in pt
					}
	
			Minor:
				Add all classes skills to CheckCancel_LessImportantSkillCasting, in order to brez faster
	
	
			Cannot be made.
					Ignore Targets on UD or cele. -no abnormal change 
					
					
			acc
			devcraft01
*)
uses 
SysUtils, Classes, 
global_vars, fp_inc, 
fp_target_inc, fp_char_info, 
fp_actions_inc, fp_skills;




procedure OnFree;
begin
	script.replace(Script.Path + 'fp_main.txt');
end;

procedure AutoWarlord;
var
ma : Tl2Char;
debug: Boolean;
pauseMessageSent: Boolean;
begin
	pauseMessageSent := false;
	Print('Auto Warlord Started.');
	debug := false;
	while true do begin
		Delay(300);
		try
			CheckRemove_BuffsByList;
			
			SetPvpStance;
			VoiceCommand_Listen;
			if DoActions or TotalPause or (User.Dead) then begin
				if not pauseMessageSent then begin
					Print('We are total paused');
					pauseMessageSent := true;
				end;
				Continue;
			end;
			pauseMessageSent := false;
			
			PlayersNearby := IsOtherPlayersNearby(3000);
			SetPoint_PartyCenter;
			
			if (DiscreteMode) and (PlayersNearby) then Continue;
			if Mode_WaitForCasting then WaitForCasting;
			
			//	Before anything else, check our distance to party center
			//	As we shouldn't do anything unless party is close
			if CheckPartyDistance then Continue;
			
			//Combat Related
			if (IsUnderAttack) and CombatEnabled then begin
				
				if CheckUse_HeroSelfBuffs then continue;
				
				
				//	time to aoe?
				if (IsTime_ToAoe) then begin
					//Print('Warlord: Time to aoe!');
					SetPoint_AoePosition;
					SetDistance_AoePointDistance;
									
					if not (IsAoePoint_Valid) then begin
						Print('Warning Aoe point is not valid! exit');
						continue;
					end;
									
					if Check_ClusterCharge then continue;
					
					if (AOE_PT_DIST > 100) then begin
						//MoveTo_AoePoint(80); Continue; end;
						MoveTo_AoePoint_Continuous(80); Continue; end;
					//MoveTo_AoePoint_RestoreSettings;
					
					//So here we are within 150 range of the aoe point.
					if (PvpLoaded) then begin
					
						if CheckUse_FinalSecret then continue;
						
						//Dread Pool
						if HasSkill_Ready_Interval(774, 5000) then begin
							UseSkill_SetInterval(774, 5000);
							//Dont continue, in case of "adrenalin cooldown bug"
						end;
						
						//AOE Pvp									
						if (SetTarget_Nearest_Pvp) then
							Continue;
						
					end else begin
						//AOE PVE
						if (SetTarget_Nearest_Pve) then
							Continue;
					end;
				
				//	if not aoe, then we single target!
				end else begin
					Print('Warlord: Time to single target!');
					//MoveTo_AoePoint_RestoreSettings;
					
					if (PvpLoaded) then begin
					
						if CheckUse_FinalSecret then continue;
						
						//Single Target Pvp
						if SetTarget_MainAssist then 
							continue
						else if SetTarget_Best_Pvp then 
							continue;
							
					end else begin
						//Singe Target Pve
						
						if SetTarget_Pve then
							Continue;
					end;
				
				end;
				
				
			//Non Combat Related
			end else begin
				
				if CheckMove_DeadParty_LeaderOnly() then continue;
				
				
			end;
			AutoFollow();
			
		except
			on E : EInvalidPointer do begin
				Print('Pointer Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
			
			on E : Exception do begin
				Print('Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
		end;
	end;
end;


procedure AutoOverlord;
var
ma : Tl2Char;
pauseMessageSent: Boolean;
begin
	pauseMessageSent := false;
	Print('Auto Overlord Started.');
	
	while true do begin
		Delay(300);
		try
			CheckRemove_BuffsByList;
			
			VoiceCommand_Listen;
			SetPvpStance;
			if DoActions or TotalPause or (User.Dead) then begin
				if not pauseMessageSent then begin
					Print('We are total paused');
					pauseMessageSent := true;
				end;
				Continue;
			end;
			pauseMessageSent := false;
			
			
			PlayersNearby := IsOtherPlayersNearby(3000);
			SetPoint_PartyCenter;
			
			if (DiscreteMode) and (PlayersNearby) then Continue;
			if Mode_WaitForCasting then WaitForCasting;
		
			//	Before anything else, check our distance to party center
			//	As we shouldn't do anything unless party is close
			if CheckPartyDistance then Continue;
			
			//Combat Related
			if (IsUnderAttack) and CombatEnabled then begin
				if CheckUse_HeroSelfBuffs then continue;
				SetPoint_AoePosition;
				(*
				// If Seal of Despair / Blockade and others are on cd, find mage cluster and spam silence
				if not(HasSkills_Ready_Any(despair, blockade, whatever)) then begin
					if (GetCount_ClusteredMages_Pvp > 2) then begin
						
						made procedures:
						GetTarget_MostClustered_Char_MagesOnly
						GetCount_ClusteredMages_Pvp
						GetPoint_AoePosition_Pvp_ClusteredMages
						
					end;
				end;
				*)
				//	time to aoe?
				if (IsTime_ToAoe) and (IsAoePoint_Valid) then begin
					SetDistance_AoePointDistance;
					
					if (AOE_PT_DIST > 100) then begin
						//MoveTo_AoePoint(80);
						MoveTo_AoePoint_Continuous(80); 					
						Continue; 
					end;
					//MoveTo_AoePoint_RestoreSettings;
					CheckUse_Enlightenment_Healer(70); //Use if our mana is below 70%
					//Check use seal of silence...
					if (HasSkill_Ready(1246)) and HasSkill_Ready_Interval(1246, 5000) then begin
						if (GetCount_MagesClustered_NearChar_Pvp(User, 300) > 1) then begin
							//if HasSkill_Ready_Interval(1246, 5000) then //Skill ID = 1246, Interval = 5000
							UseSkill_SetInterval(1246, 5000);
						end;
					end;
					
					//So here we are within 150 range of the aoe point.
					if (PvpLoaded) then begin
						//AOE Pvp
						if (SetTarget_Nearest_Pvp) then begin
							UseSkill_Ol_AoeAttack_Pvp;
							Continue;
						end;
					end else begin
						//AOE PVE
						if (SetTarget_Nearest_Pve) then begin
							Continue;
						end;
					end;
				
				//	if not aoe, then we single target!
				end else begin
				
					if (PvpLoaded) then begin
						//Single Target Pvp
						if SetTarget_MainAssist then 
							continue
						else if TargetSearch_LowestFirst and SetTarget_LowestHpAgroed_Pve(650) then
							continue
						else if SetTarget_Best_Pvp then
							continue;
							
					end else begin
						//Singe Target Pve
						if (SetTarget_Pve) then
							Continue;
					end;
				
				end;
				
				
			//Non Combat Related
			end else begin
				if CheckMove_DeadParty_LeaderOnly() then continue;
				
				
			end;
			AutoFollow();
		except
			on E : EInvalidPointer do begin
				Print('Pointer Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
			
			on E : Exception do begin
				Print('Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
		end;
	end;
end;


procedure AutoTank;
var
ma : Tl2Char;
AgroMode, TargetFound: Boolean;
circleRoundNum: Integer;
pauseMessageSent: Boolean;
begin
	pauseMessageSent := false;
	Print('Auto Tank Started.');
	
	AgroMode := false;
	circleRoundNum := 1;	
	
	while true do begin
		Delay(200);
		try
			CheckRemove_BuffsByList;
			
			VoiceCommand_Listen;
			CheckDispellBuffs([915, 1261]); //zerk dance, paagrio zerk
			
			SetPvpStance;
			if DoActions or TotalPause or (User.Dead) then begin
				if not pauseMessageSent then begin
					Print('We are total paused');
					pauseMessageSent := true;
				end;
				Continue;
			end;
			pauseMessageSent := false;
			
			PlayersNearby := IsOtherPlayersNearby(3000);
			SetPoint_PartyCenter;
			TargetFound := false;
			
			if (DiscreteMode) and (PlayersNearby) then Continue;
			if Mode_WaitForCasting then WaitForCasting;
			
			//Handle Circle agro mode
			if (CircleAgroMode) then begin
				ma := GetTarget_MainAssist;
				Action_CircleAgroMove(circleRoundNum, ma);
				Inc(circleRoundNum);
			end else if (circleRoundNum > 1) then //Initialize movement pattern, if mode is suddenly off
				circleRoundNum := 1;
		
		
			//	Before anything else, check our distance to party center
			//	As we shouldn't do anything unless party is close
			if CheckPartyDistance then Continue;
			
			if CombatEnabled then begin
				if CheckUse_Tank_Overall_Buff then continue;
			end;
			//Combat Related
			if (IsUnderAttack) and CombatEnabled then begin
				
				
				//	Pvp Combat
				if (PvpLoaded) then begin
					if CheckUse_HeroSelfBuffs then continue;
					
					CheckUse_HeroicValor_LeaderOnly;
					
					if (CheckUse_Tank_Pvp_Buff) then continue;
					
					if CheckUse_InsaneCrusher or CheckUse_HellScream then continue; //Hell Knights only
					//MoveTo_AoePoint_RestoreSettings;
					
					if (SetTarget_ToAgro_Pvp) then begin
						AgroMode := true;
						TargetFound := true;
					
					end else if (SetTarget_Best_Pvp) then begin
						AgroMode := false;
						TargetFound := true;
					
					end else
						TargetFound := false;
					
					if (TargetFound) then begin
					
						if AgroMode and CheckUse_TankAoeAgro then continue;
					
						if AgroMode and HasSkills_Ready_Any(28, 985)	
						and UseSkill_Tank_Agro_Pvp then begin
							Continue;
							
						end else if CheckUse_Tank_MiscPvp_Skills() then begin
							continue;
						
						end else if HasSkills_Ready_Any(984, 92, 342, 353, 401, 403, 352)
						and UseSkill_Tank_Attack_Pvp then begin
							Continue;
						end else if Engine.Attack(50) then
							Continue;
					
					end else if CheckUse_Tank_MiscPvp_Skills() then 
						continue;
						
				//	Pve Combat
				end else begin
					
					if CheckUse_Tank_Pve_Buff then continue;
					
					if CheckUse_InsaneCrusher then continue;
					//MoveTo_AoePoint_RestoreSettings;
					
					if (SetTarget_ToAgro_Pve) then begin
						AgroMode := true;
						TargetFound := true;
					
					end else if (SetTarget_Pve) then begin
						AgroMode := false;
						TargetFound := true;
					
					end else
						TargetFound := false;
						
					
					if (TargetFound) then begin
					
						if AgroMode and CheckUse_TankAoeAgro then continue;
					
						if AgroMode and HasSkills_Ready_Any(28, 985) and (User.Mp > 10) 
						and UseSkill_Tank_Agro_Pve then begin
							Continue;
						end else if HasSkills_Ready_Any(984, 92, 401, 400, 352) and (User.Mp > 50)
						and UseSkill_Tank_Attack_Pve then begin
							Continue;
						end else if Engine.Attack(50) then 
							Continue;
						
					end;
				
				end;

				
			//Non Combat Related
			end else begin
			
				if CheckUse_Cubics then continue;
				
			end;
			//	If anyone is dead, and we are not in combat,
			//	go to them, so the healers will get close and auto rez.
			if (CheckMove_DeadParty_LeaderOnly) then Continue;
			AutoFollow();
			
			if (User.Name = GetName_LocalLeader) then 
				CheckFindNewMob;
			
		except
			on E : EInvalidPointer do begin
				Print('Pointer Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
			
			on E : Exception do begin
				Print('Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
		end;
	end;
	
		(*
	  MassAgro := GeneralFunctions.LoadSkill(18); //SkillList.ByID(18, MassAgro);
	  Agro := GeneralFunctions.LoadSkill(28); //SkillList.ByID(28, Agro);
	  FateChal := GeneralFunctions.LoadSkill(985); //SkillList.ByID(985, FateChal);
	  ShieldAgro := GeneralFunctions.LoadSkill(984); //SkillList.ByID(984, ShieldAgro);
	  Stun := GeneralFunctions.LoadSkill(92); //SkillList.ByID(92, Stun);
	  ToD := GeneralFunctions.LoadSkill(342); //SkillList.ByID(342, ToD);
	  ShieldSlam := GeneralFunctions.LoadSkill(353); //SkillList.ByID(353, ShieldSlam);
	  Judgement := GeneralFunctions.LoadSkill(401); //SkillList.ByID(401, Judgement);
	  Shackle := GeneralFunctions.LoadSkill(403); //SkillList.ByID(403, Shackle);
	  SoF := GeneralFunctions.LoadSkill(528); //SkillList.ByID(528, SoF);
	  InsaneCrusher := GeneralFunctions.LoadSkill(762); //SkillList.ByID(762, InsaneCrusher);
	  HellScream := GeneralFunctions.LoadSkill(763); //SkillList.ByID(763, HellScream);


*)	
	
end;


procedure AutoBishop;
var
ma : Tl2Char;
pauseMessageSent, debug: Boolean;
begin
	pauseMessageSent := false;
	Print('Auto Bishop Started.');
	debug := false;
	while true do begin
		if debug then Print('Bishop: Start round');
		try
			if Mode_Pickup then Delay(50) else Delay(200);
			
			if debug then Print('Bishop: Remove Buffs');
			CheckRemove_BuffsByList;
			if debug then Print('Bishop: Remove Buffs 2');
			CheckDispellBuffs([915, 1261]); //Paagrio Rage, Berserker Dance, Spirit of Shilen
			if (User.Hp < 80) then
				CheckDispellBuffs([789]);
			if debug then Print('Bishop: Listen to commands');
			VoiceCommand_Listen;
			if debug then Print('Bishop: Set pvp stance');
			SetPvpStance;
			if debug then Print('Bishop: DoActions, Wait for pause, or wait for dead');
			if DoActions or TotalPause or (User.Dead) then begin
				if debug then Print('Bishop: Check Dead Actions...');
				CheckDo_DeadActions_Healer1();
				
				if not pauseMessageSent then begin
					Print('We are total paused');
					pauseMessageSent := true;
				end;
				Continue;
			end;
			pauseMessageSent := false;
			
			if debug then Print('Bishop: Check Nearby Players Actions...');
			PlayersNearby := IsOtherPlayersNearby(3000);
			if debug then Print('Bishop: Set Party Center');
			SetPoint_PartyCenter;
			if debug then Print('Bishop: Check Low hp actions');
			//if CombatEnabled then begin
				Check_LowHpMode_Actions;
			//end;
			
			if debug then Print('Bishop: Check discrete/WaitForCasting');
			if (DiscreteMode) and (PlayersNearby) then Continue;
			if Mode_WaitForCasting then WaitForCasting;
			
			
			//Healing Related
			
			if debug then Print('Bishop: Is time to heal or IsUnderAttack');
			if (IsTime_ToHeal) then begin
				
				if PvpLoaded and CheckUse_Enlightenment_Healer(60) then continue; 
				
				if debug then Print('Bishop: Check Hero self buffs');
				if CheckUse_HeroSelfBuffs then continue;
				if debug then Print('Bishop: Check Mass Rez');
				//	Mass Resurection?
				if CheckUse_MassRez_Healer1Only then begin
					Continue;
				end;
				if debug then Print('Bishop: Check Rez');
				//	Resurection?
				//if CheckUse_Rez_Healer1Only then continue;
				if HandleResurrection_Healer1Only then continue;
				
				//Check Sublime Self Sacrifice
				if debug then Print('Bishop: Check Sublime');
				if (*PvpLoaded and *)CheckUse_Sublime_Healer1Only then continue;
				
				if debug then Print('Bishop: Check Miracle');
				// Miracle? (Clan full heal skill)
				if PvpLoaded and CheckUse_Miracle_Healer1Only then continue;
				
				if debug then Print('Bishop: Check Balance');
				//	Balance Life?
				if not LowHpMode
				and CheckUse_BalanceLife_Healer1Only then begin
					Continue;
				end;
				if debug then Print('Bishop: Check Mass Cleanse');
				// Mass Cleanse? (Pvp Only)
				if PvpLoaded and CheckUse_MassCleanse_Healer1Only then continue;
				
				if debug then Print('Bishop: Check Cleanse');
				//	Cleanse?
				//if CheckUse_Cleanse_Healer1Only then continue;
				if HandleCleanse_Healer1Only then continue;
				
				(*if debug then Print('Bishop: Check Cleanse, on friendly Bishops');
				if HasSkill_Ready(1409)
				and HasItem_MinCount(Engine, 8874, 1) then begin
					if CheckUse_Cleanse_FriendlyBishop then begin
						Continue;
					end;
				end;*)
				if debug then Print('Bishop: Check Group Heal');
				//	Major Group Heal?
				if not PvpLoaded 		//Disable for pvp
				and not LowHpMode
				and HasSkill_Ready(1402) and not HasSkill_Ready(1553) //1553 = Chain Heal
				and (IsTime_ToMajorGroupHeal) then begin
					UseSkill_Safe(1402, user, false);
					Continue;
				end;
			
			//If we do not need to heal
			end else if IsUnderAttack and CombatEnabled then begin
				if debug then Print('Bishop: Check Leader Dist');
				if CheckLeaderDistance(300) then continue;
				
				
				if debug then Print('Bishop: Check use stigma');
				if CheckUse_Stigma then continue;
				
				if debug then Print('Bishop: Check PvpLoaded');
				//What to do in Pvp if not healing?
				if (PvpLoaded) then begin
					if debug then Print('Bishop: Check Hero Self Buffs, 2');
					if CheckUse_HeroSelfBuffs then continue;
					if debug then Print('Bishop: Check Mass Block WW');
					if CheckUse_MassBlockWindWalk then continue;
					
					if debug then Print('Bishop: Check Mana Burn');
					//Mana Burn
					if ManaMattersMode
					and HasSkill_Ready(1398)
					and (User.Mp > 45)
					and SetTarget_ToManaBurn then begin
						Engine.UseSkill(1398);
						continue;
					end;
					
					if debug then Print('Bishop: Check Trance');
					//Trance
					if (HasSkill_Ready(1394)) 
					and (SetTarget_BestCC_Pvp) then begin
						if not (IsTarget_Slept(User.Target)) then begin
							Engine.UseSkill(1394);
							Continue;
						end;
					end;
				
				end else begin
					
					//Pve, nothing atm
					
				end;
			end else begin
				//Non Combat/Heal Related
				if debug then Print('Bishop: Check Move to dead member');
				if CheckMove_DeadParty_LeaderOnly() then continue;
				
			end;
			if debug then Print('Bishop: Check Recharge');
			CheckUse_Recharge_Healer1Only(80);
			if debug then Print('Bishop: Check AutoFollow');
			AutoFollow();	
		except
			on E : EInvalidPointer do begin
				Print('Pointer Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
			
			on E : Exception do begin
				Print('Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
		end;
	end;
end;

procedure AutoElvenElder;
var
ma : Tl2Char;
pauseMessageSent: Boolean;
begin
	pauseMessageSent := false;
	Print('Auto Elven Elder Started.');
	while true do begin
		Delay(400);
		try
			CheckRemove_BuffsByList;
			CheckDispellBuffs([789]); //Spirit of Shilen
			
			VoiceCommand_Listen;
			SetPvpStance;
			if DoActions or TotalPause or (User.Dead) then begin
				if not pauseMessageSent then begin
					Print('We are total paused');
					pauseMessageSent := true;
				end;
				Continue;
			end;
			pauseMessageSent := false;
			
			PlayersNearby := IsOtherPlayersNearby(3000);
			SetPoint_PartyCenter;
			
			if (DiscreteMode) and (PlayersNearby) then Continue;
			if Mode_WaitForCasting then WaitForCasting;
			
			
			//Healing Related
			if (IsTime_ToHeal_Ee) then begin
				if CheckUse_HeroSelfBuffs then continue;
				
				
				//	Major Group Heal?
				if HasSkill_Ready(1402)
				and (IsTime_ToMajorGroupHeal) then begin
					Engine.FaceControl(0, false);
					Engine.UseSkill(1402);
					Engine.FaceControl(0, true);
					Continue;
				end;
				
			//If we do not need to heal
			end else if IsUnderAttack and CombatEnabled then begin
			
				//What to do in Pvp if not healing?
				if (PvpLoaded) then begin
					if CheckUse_HeroSelfBuffs then continue;
				
					//Mana Burn
					if HasSkill_Ready(1398)
					and (User.Mp > 50)
					and SetTarget_ToManaBurn then begin
						Engine.UseSkill(1398);
						continue;
					end;
				
					//Trance
					if (HasSkill_Ready(1394)) 
					and (SetTarget_BestCC_Pvp) then begin
						if not (IsTarget_Slept(User.Target)) then begin
							Engine.UseSkill(1394);
							Continue;
						end;
					end;
				
					//Check Block WW
				
				end else begin
					
					//Pve, nothing atm
					
				end;
			end else begin
				//Non Combat/Heal Related
				
				if CheckMove_DeadParty_LeaderOnly() then continue;
			
			end;
			
			AutoFollow();	
			
		except
			on E : EInvalidPointer do begin
				Print('Pointer Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
			
			on E : Exception do begin
				Print('Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
		end;
	end;
end;

procedure AutoNuker;
var
ma : Tl2Char;
oLiveTarget: Tl2Live;
oCharTarget: Tl2Char;
pauseMessageSent, enteredAoePvp: Boolean;
begin
	pauseMessageSent := false;
	
	Print('Auto Nuker Started.');
	while true do begin
		Delay(150);	
		try
			CheckRemove_BuffsByList;	
			
			VoiceCommand_Listen;
			SetPvpStance;
			if DoActions or TotalPause or (User.Dead) then begin
				if not pauseMessageSent then begin
					Print('We are total paused');
					pauseMessageSent := true;
				end;
				Continue;
			end;
			pauseMessageSent := false;
			
			SetPoint_PartyCenter;
			
			
			if Mode_WaitForCasting then WaitForCasting;
		
			//	Before anything else, check our distance to party center
			//	As we shouldn't do anything unless party is close
			if CheckPartyDistance then Continue;
			
			//Combat Related
			if (IsUnderAttack) and CombatEnabled then begin
				
				if (PvpLoaded) and CheckUse_Fear_Pvp(800) then begin
					Print('Use the fuck fear');
					Continue;
				end;
				
				if Action_CheckForCombatInitiation then begin
					Print('Start the fuck fighting');
					continue;
				end;
				
				//	time to aoe?		
				if (IsTime_ToAoe) and not (IsClass_Necro(User.ClassId)) then begin
				
					//Print('Time to AOE!');
					//Print('Time to aoe');
					//So here we are within 150 range of the aoe point.
					if (PvpLoaded) then begin
					
						//Print('Time to AOE! - PVP');
						if not enteredAoePvp then begin
							enteredAoePvp := true;
							Engine.FaceControl(1, false); //Disable attacks
						end;
						if CheckUse_HeroSelfBuffs then continue;
					
						//AOE Pvp
						if (CheckUse_AoeSkill_Nuker) then
							Continue;
						
						
					end else begin
						
						//Print('Time to AOE! - PVE');
						if enteredAoePvp then begin
							enteredAoePvp := false;
							Engine.FaceControl(1, true); //Enable attacks
						end;
						//AOE PVE
						if (SetTarget_MostClustered_Pve) then
							Continue;
					end;
				
				//	if not aoe, then we single target!
				end else begin
					if enteredAoePvp then begin
						enteredAoePvp := false;
						Engine.FaceControl(1, true); //Enable attacks
					end;
					
					if (PvpLoaded) then begin
						if CheckUse_HeroSelfBuffs then continue;
											
						if IsClass_Necro(User.ClassId) then begin
						
							//Check use Curse of Doom
							if HasSkill_Ready(1336)  then begin
								if (SetTarget_BestToSilence_Pvp(650)) then begin
									Engine.DUseSkill(1336, true, false);
									Continue;
								end;
							end;
							
							//Check use Anchor
							if HasSkill_Ready(1170)  then begin
								if (SetTarget_BestToSilence_Pvp(450)) then begin
									Engine.DUseSkill(1170, true, false);
									Continue;
								end;
							end;
							
						end else begin
							CheckUse_AuraFlash;
						end;
						
						//Single Target Pvp
						if SetTarget_MainAssist then begin
							Print('Take Main assist''s target');
							continue;
						end else if SetTarget_Best_Pvp then begin
							Print('Take my own target');
							continue;
						end else begin
							Print('No Target FOUND!!!!!!!!!');
						end;
						
					end else begin
						//Singe Target Pve
						if SetTarget_Pve then
							continue;
							
					end;
				
				end;
				
				
			//Non Combat Related
			end else begin
				if enteredAoePvp then begin
					enteredAoePvp := false;
					Engine.FaceControl(1, true); //Enable attacks
				end;
			
				if CheckMove_DeadParty_LeaderOnly() then continue;
				
				
			end;
			
			if enteredAoePvp then begin
				enteredAoePvp := false;
				Engine.FaceControl(1, true); //Enable attacks
			end;
			
			AutoFollow();
			if CombatEnabled and not PvpLoaded and Mode_KillAll then CheckMode_KillAll;
			
		except
			on E : EInvalidPointer do begin
				Print('Pointer Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
			
			on E : Exception do begin
				Print('Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
		end;
	end;
end;

 
procedure AutoSoulHound;
var
ma : Tl2Char;
oLiveTarget: Tl2Live;
oCharTarget: Tl2Char;
pauseMessageSent: Boolean;
begin
	pauseMessageSent := false;
	Print('Auto Soulhound Started.');
	while true do begin
		Delay(300);
		try
			CheckRemove_BuffsByList;
			
			VoiceCommand_Listen;
			
			
			SetPvpStance;
			if DoActions or TotalPause or (User.Dead) then begin
				if not pauseMessageSent then begin
					Print('We are total paused');
					pauseMessageSent := true;
				end;
				Continue;
			end;
			pauseMessageSent := false;
			
			
			PlayersNearby := IsOtherPlayersNearby(3000);
			SetPoint_PartyCenter;
			
			if (DiscreteMode) and (PlayersNearby) then Continue;
			if Mode_WaitForCasting then WaitForCasting;
			
		
			//	Before anything else, check our distance to party center
			//	As we shouldn't do anything unless party is close
			if CheckPartyDistance then Continue;
			
			//Combat Related
			if (IsUnderAttack) and CombatEnabled then begin
				if CheckUse_HeroSelfBuffs then continue;
				
				SetPoint_AoePosition;
				if Action_CheckForCombatInitiation then continue;
				
				//Attacks regardless of Aoe status
				if (PvpLoaded) then begin
				
					//Check main assist's target for death mark
					if HasSkill_Ready_Interval(1435, 2500) then begin
						ma := GetTarget_MainAssist;
						oLiveTarget := ma.Target;
						if not (ma = nil)
						and not (ma.Oid = user.Oid)
						and not (oLiveTarget = nil)
						and IsTarget_Valid_Char(oLiveTarget)
						and not IsTarget_DeathMarked(oLiveTarget) then begin
							Engine.CancelTarget();
							Engine.SetTarget(oLiveTarget);
							UseSkill_SetInterval(1435, 2500);
							Continue;
						end;
					end;
				
					//Check use Voice Bind...
					if HasSkill_Ready_Interval(1447, 5000) then begin
						if (SetTarget_BestToSilence_Pvp(450)) then begin
							UseSkill_SetInterval(1447, 5000);
						end;
					end;
					//Check use Shadow Bind...
					if HasSkill_Ready_Interval(1447, 5000) then begin
						if (SetTarget_BestToRoot_Pvp(450)) then begin
							UseSkill_SetInterval(1447, 5000);
						end;
					end;
				end;
				
				//	time to aoe?
				if (IsTime_ToAoe) and (IsAoePoint_Valid) and not PvpLoaded then begin
					//Print('Time to Aoe!');
					SetDistance_AoePointDistance;
					
					if Check_ClusterCharge then continue;
					
					
					if (AOE_PT_DIST > 100) then begin
						//MoveTo_AoePoint(80); 
						MoveTo_AoePoint_Continuous(80); 
						Continue; 
					end;
					//MoveTo_AoePoint_RestoreSettings;
					
					//So here we are within 150 range of the aoe point.
					if (PvpLoaded) then begin
						//AOE Pvp
						if (SetTarget_Nearest_Pvp) then begin
							UseSkill_Slh_AoeAttack_Pvp;
							Continue;
						end;
					end else begin
						//AOE PVE
						if (SetTarget_MostClustered_Pve) then begin
							UseSkill_Slh_AoeAttack_Pve;
							Continue;
						end;
					end;
				
				//	if not aoe, then we single target!
				end else begin
					//MoveTo_AoePoint_RestoreSettings;
				
					if (PvpLoaded) then begin
						//Single Target Pvp
						if SetTarget_MainAssist then 
							continue
						else if SetTarget_Best_Pvp then
							continue;
							
					end else begin
					
						//Singe Target Pve
						if SetTarget_Pve then
							continue;
					end;
				
				end;
				
				
			//Non Combat Related
			end else begin
				if CheckMove_DeadParty_LeaderOnly() then continue;
				
				
			end;
			AutoFollow();
			
		except
			on E : EInvalidPointer do begin
				Print('Pointer Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
			
			on E : Exception do begin
				Print('Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
		end;
	end;
end;


procedure AutoOffTank_SwsBd;
var
ma, deadMember : Tl2Char;
AgroMode, TargetFound: Boolean;
circleRoundNum: Integer;
begin
	Print('Auto Tank Started.');
	AgroMode := false;
	circleRoundNum := 1;
	
	while true do begin
		Delay(250);
		
		VoiceCommand_Listen;
		
		
		SetPvpStance;
		if DoActions or TotalPause or (User.Dead) then begin
			Print('We are total paused');
			Continue;
		end;
		
		PlayersNearby := IsOtherPlayersNearby(3000);
		SetPoint_PartyCenter;
		TargetFound := false;
		
		if (DiscreteMode) and (PlayersNearby) then Continue;
		if Mode_WaitForCasting then WaitForCasting;
	
		//Handle Circle agro mode
		if (CircleAgroMode) then begin
			ma := GetTarget_MainAssist;
			Action_CircleAgroMove(circleRoundNum, ma);
			Inc(circleRoundNum);
		end else if (circleRoundNum > 1) then //Initialize movement pattern, if mode is suddenly off
			circleRoundNum := 1;
	
	
		//	Before anything else, check our distance to party center
		//	As we shouldn't do anything unless party is close
		if CheckPartyDistance then Continue;
		
		//Combat Related
		if (IsUnderAttack) and CombatEnabled then begin
			if CheckUse_HeroSelfBuffs then continue;
			
			//	Pvp Combat
			if (PvpLoaded) then begin
				
				if (ShouldIAgro and SetTarget_ToAgro_Pvp) then begin
					AgroMode := true;
					TargetFound := true;
				
				end else if (SetTarget_Best_Pvp) then begin
					AgroMode := false;
					TargetFound := true;
				
				end else
					TargetFound := false;
				
				if (TargetFound) then begin
				
					if AgroMode and HasSkills_Ready_Any(28) then begin
						if UseSkill_Aggression_Pvp then Continue;
					end else begin
						if not CheckSwsBd_Aoe then
							Engine.Attack(1000, true);
					end;
					
					//if not AgroMode and HasSkills_Ready_Any(984, 92, 342, 353, 401, 403) then begin
						//if UseSkill_Hk_Attack_Pvp then Continue;
					//end;
				
				end;
			//	Pve Combat
			end else begin
				
				
				if (ShouldIAgro and SetTarget_ToAgro_Pve) then begin
					AgroMode := true;
					TargetFound := true;
				
				end else if (SetTarget_Pve) then begin
					AgroMode := false;
					TargetFound := true;
				
				end else
					TargetFound := false;
					
				
				if (TargetFound) then begin
					if AgroMode and HasSkills_Ready_Any(28) then begin
						if UseSkill_Aggression_Pve then Continue;
					end else begin
						if not CheckSwsBd_Aoe then
							Engine.Attack(1000, true);
					end;
					
				end;
			
			end;

			
		//Non Combat Related
		end else begin
			if CheckMove_DeadParty_LeaderOnly() then continue;
			
		end;
		
		AutoFollow();
	end;
end;



procedure AutoArcher;
var
ma : Tl2Char;
pauseMessageSent: Boolean;
begin
	pauseMessageSent := false;
	Print('Auto Archer Started.');
	while true do begin
		Delay(400);
		
		VoiceCommand_Listen;
		SetPvpStance;
		if DoActions or TotalPause or (User.Dead) then begin
			if not pauseMessageSent then begin
				Print('We are total paused');
				pauseMessageSent := true;
			end;
			Continue;
		end;
		pauseMessageSent := false;
		
		PlayersNearby := IsOtherPlayersNearby(3000);
		SetPoint_PartyCenter;
		
		if (DiscreteMode) and (PlayersNearby) then Continue;
		if Mode_WaitForCasting then WaitForCasting;
		
	
		//	Before anything else, check our distance to party center
		//	As we shouldn't do anything unless party is close
		if CheckPartyDistance then Continue;
		
		//Combat Related
		if (IsUnderAttack) and CombatEnabled then begin
			//SetPoint_AoePosition;
			if CheckUse_HeroSelfBuffs then continue;
			if Action_CheckForCombatInitiation then continue;
			
			//single target!
			
			if (PvpLoaded) then begin
				//Single Target Pvp
				if SetTarget_MainAssist then 
					continue
				else if SetTarget_Best_Pvp then
					continue;
						
			end else begin
				//Singe Target Pve
					if SetTarget_Pve then
						continue;						
			end;
						
		//Non Combat Related
		end else begin
			if CheckMove_DeadParty_LeaderOnly() then continue;
			
			
		end;
		AutoFollow();
	end;
end;

procedure AutoSummoner;
var
ma, oTargetToFollow : Tl2Char;
counter: Integer;
setPet: Boolean;
pauseMessageSent: Boolean;
begin
	pauseMessageSent := false;
	Print('Auto Summoner Started.');
	counter := 0;
	while true do begin
		Delay(300);
		
		counter := counter + 1;
		if (counter mod 3 = 0) then begin
			setPet := true;
			counter := 0;
		end else begin
			setPet := false;
		end;
		
		
		VoiceCommand_Listen;
		SetPvpStance;
		if DoActions or TotalPause or (User.Dead) then begin
			if not pauseMessageSent then begin
				Print('We are total paused');
				pauseMessageSent := true;
			end;
			Continue;
		end;
		pauseMessageSent := false;
		PlayersNearby := IsOtherPlayersNearby(3000);
		SetPoint_PartyCenter;
		
		//SetPoint_PartyCenter;
		if (DiscreteMode) and (PlayersNearby) then Continue;
		if Mode_WaitForCasting then WaitForCasting;
		
		if CombatEnabled and AA_BringMobsMode then begin
			if (setPet) then PullMobs_CleanList;
			if Action_PullMobs then continue
			else if (AA_BringMobsMode) then begin
				//If we are in bringMobsMode, and no mobs to pull, run to group
					AutoFollow;
			end;
		end;
	
	
		//	Before anything else, check our distance to party center
		//	As we shouldn't do anything unless party is close
		if CheckPartyDistance then Continue;
		
		//Combat Related
		if (IsUnderAttack) and CombatEnabled then begin
			if CheckUse_HeroSelfBuffs then continue;
		(*	
			//	time to aoe?
			if (IsTime_ToAoe) and (has summon 79) then begin
				
				//So here we are within 150 range of the aoe point.
				if (PvpLoaded) then begin
					//AOE Pvp
					if (SetTarget_MostClustered_Pvp) then
						Continue;
					
				end else begin
					//AOE PVE
					if (SetTarget_MostClustered_Pve) then
						Continue;
				end;
			
			//	if not aoe, then we single target!
			end else begin
		*)	
				if (PvpLoaded) then begin
					//Single Target Pvp
				(*	if setPet then begin
						if 79 summon and summon aoe ready then begin
							check pet mana, range, not dead etc..
							find center target
							use summon aoe on target
							if aoe used, delay(100) and go on to initialize pet attack
						end;
					
						ma := GetTarget_MainAssist;
						if (ma = nil) or (ma.Oid = user.Oid) or (ma.target = nil) then begin
							if (SetTarget_Best_Pvp) then begin
								//Pet Attack!
								Continue;
							end;
						end else if not(ma.target = nil) then begin
							Engine.CancelTarget();
							Engine.SetTarget(ma.target);
							//Pet Attack! 
							Continue;
						end;
					end else begin
						//If it is not time to attack with pet
						//Do warrior bane
						//Mass surrender to water
					
					end;
					//Attack with pet
						*)
				end else begin
					//Singe Target Pve
					if SetTarget_Pve then 
						continue;
				end;
			
			//end;
			
			
		//Non Combat Related
		end else begin
			if CheckMove_DeadParty_LeaderOnly() then continue;
			
			
		end;
		AutoFollow();
	end;
end;


procedure AutoJudi;
var
ma, oTargetToFollow : Tl2Char;
counter: Integer;
setPet: Boolean;
pauseMessageSent: Boolean;
begin
	pauseMessageSent := false;
	Print('Auto Judicator Started.');
	counter := 0;
	while true do begin
		Delay(300);
		
		counter := counter + 1;
		if (counter mod 3 = 0) then begin
			setPet := true;
			counter := 0;
		end else begin
			setPet := false;
		end;
		
		
		VoiceCommand_Listen;	
		
		SetPvpStance;
		if DoActions or TotalPause or (User.Dead) then begin
			if not pauseMessageSent then begin
				Print('We are total paused');
				pauseMessageSent := true;
			end;
			Continue;
		end;
		pauseMessageSent := false;
		
		SetPoint_PartyCenter;
		PlayersNearby := IsOtherPlayersNearby(3000);
		
		if (DiscreteMode) and (PlayersNearby) then Continue;
		if Mode_WaitForCasting then WaitForCasting;
		
		if CombatEnabled and AA_BringMobsMode and not PvpLoaded then begin
			if (setPet) then PullMobs_CleanList;
			if Action_PullMobs then continue
			else if (AA_BringMobsMode) then begin
				//If we are in bringMobsMode, and no mobs to pull, run to group
					AutoFollow;
			end;
		end;
	
	
		//	Before anything else, check our distance to party center
		//	As we shouldn't do anything unless party is close
		if CheckPartyDistance then Continue;
		
		//Combat Related
		if (IsUnderAttack) and CombatEnabled then begin
			if CheckUse_HeroSelfBuffs then continue;
				if (PvpLoaded) then begin
					//Single Target Pvp
					
				end else begin
					//Singe Target Pve
					if SetTarget_Pve then
						continue;
				end;
			
			//end;
			
			
		//Non Combat Related
		end else begin
			if CheckMove_DeadParty_LeaderOnly() then continue;
			
			
		end;
		AutoFollow();
	end;
end;


procedure AutoTitan;
var
ma : Tl2Char;
oLiveTarget: Tl2Live;
oCharTarget: Tl2Char;
pauseMessageSent: Boolean;
begin
	pauseMessageSent := false;
	Print('Auto Titan Started.');
	while true do begin
		Delay(400);		
		CheckRemove_BuffsByList;
		
		VoiceCommand_Listen;
		SetPvpStance;
		if DoActions or TotalPause or (User.Dead) then begin
			if not pauseMessageSent then begin
				Print('We are total paused');
				pauseMessageSent := true;
			end;
			Continue;
		end;
		pauseMessageSent := false;
		
		PlayersNearby := IsOtherPlayersNearby(3000);
		SetPoint_PartyCenter;
		if CombatEnabled then begin
			if Check_LowHpMode_Actions then continue;
		end;
		
		//if (DiscreteMode) and (PlayersNearby) then Continue;
		if Mode_WaitForCasting then WaitForCasting;
		
	
		//	Before anything else, check our distance to party center
		//	As we shouldn't do anything unless party is close
		if CheckPartyDistance then Continue;
		
		//Combat Related
		if (IsUnderAttack) and CombatEnabled then begin
			//SetPoint_AoePosition;
			if CheckUse_HeroSelfBuffs then continue;
			if Action_CheckForCombatInitiation then continue;
			
			//	time to aoe?		//Dont allow titans to aoe in pvp.
			if (false) and not PvpLoaded then begin
				//Dont allow Titans to Aoe at all for now.
				
				//So here we are within 150 range of the aoe point.
				if (PvpLoaded) then begin
					if CheckUse_FinalSecret then continue;
					
				
					//AOE Pvp
					if (SetTarget_MostClustered_Pvp) then
						Continue;
					
				end else begin
					//AOE PVE
					if (SetTarget_MostClustered_Pve) then
						Continue;
				end;
			
			//	if not aoe, then we single target!
			end else begin
			
				if (PvpLoaded) then begin
					if CheckUse_FinalSecret then continue;
					
					//Single Target Pvp
					if SetTarget_MainAssist then 
						continue
					else if SetTarget_Best_Pvp then
						continue;
						
				end else begin
					//Singe Target Pve
					if SetTarget_Pve then
						continue;
				end;
			
			end;
			
			
		//Non Combat Related
		end else begin
		
			if CheckMove_DeadParty_LeaderOnly() then continue;
			
			
		end;
		AutoFollow();
	end;
end;



procedure AutoTyrant;
var
ma : Tl2Char;
oLiveTarget: Tl2Live;
oCharTarget: Tl2Char;
pauseMessageSent: Boolean;
begin
	pauseMessageSent := false;
	Print('Auto Titan Started.');
	while true do begin
		Delay(400);		
		try
			CheckRemove_BuffsByList;
			
			VoiceCommand_Listen;
			SetPvpStance;
			if DoActions or TotalPause or (User.Dead) then begin
				if not pauseMessageSent then begin
					Print('We are total paused');
					pauseMessageSent := true;
				end;
				Continue;
			end;
			pauseMessageSent := false;
			
			PlayersNearby := IsOtherPlayersNearby(3000);
			SetPoint_PartyCenter;
			
			if (CombatEnabled) then begin
				if Check_LowHpMode_Actions then continue;
			end;
			
			if (DiscreteMode) and (PlayersNearby) then Continue;
			if Mode_WaitForCasting then WaitForCasting;
			
		
			//	Before anything else, check our distance to party center
			//	As we shouldn't do anything unless party is close
			if CheckPartyDistance then Continue;
			
			//Combat Related
			if (IsUnderAttack) and CombatEnabled then begin
				//SetPoint_AoePosition;
				if CheckUse_HeroSelfBuffs then continue;
				if Action_CheckForCombatInitiation then continue;
				
				//	time to aoe?		//Dont allow titans to aoe in pvp.
				if (false) and not PvpLoaded then begin
					//Dont allow Titans to Aoe at all for now.
					
					//So here we are within 150 range of the aoe point.
					if (PvpLoaded) then begin
						if CheckUse_FinalSecret then continue;
						
						//AOE Pvp
						if (SetTarget_MostClustered_Pvp) then
							Continue;
						
					end else begin
						//AOE PVE
						if (SetTarget_MostClustered_Pve) then
							Continue;
					end;
				
				//	if not aoe, then we single target!
				end else begin
				
					if (PvpLoaded) then begin
					
						if CheckUse_FinalSecret then continue;
					
						//Single Target Pvp
						if SetTarget_MainAssist then 
							continue
						else if SetTarget_Best_Pvp then
							continue;
							
					end else begin
					
						//Singe Target Pve
						if SetTarget_Pve then
							continue;
					end;
				
				end;
				
				
			//Non Combat Related
			end else begin
			
				if CheckMove_DeadParty_LeaderOnly() then continue;
				
				
			end;
			AutoFollow();
			if CombatEnabled and not PvpLoaded and Mode_KillAll then CheckMode_KillAll;
			
		except
			on E : EInvalidPointer do begin
				Print('Pointer Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
			
			on E : Exception do begin
				Print('Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
		end;
	end;
end;



procedure AutoDoombringer;
var
ma : Tl2Char;
oLiveTarget: Tl2Live;
oCharTarget: Tl2Char;
pauseMessageSent: Boolean;
begin
	pauseMessageSent := false;
	Print('Auto Doombringer Started.');
	while true do begin
		Delay(200);	
		try		
			CheckRemove_BuffsByList;
			
			VoiceCommand_Listen;
			SetPvpStance;
			if DoActions or TotalPause or (User.Dead) then begin
				if not pauseMessageSent then begin
					Print('We are total paused');
					pauseMessageSent := true;
				end;
				Continue;
			end;
			pauseMessageSent := false;
			
			PlayersNearby := IsOtherPlayersNearby(3000);
			SetPoint_PartyCenter;
			
			if (DiscreteMode) and (PlayersNearby) then Continue;
			if Mode_WaitForCasting then WaitForCasting;
			
		
			//	Before anything else, check our distance to party center
			//	As we shouldn't do anything unless party is close
			if CheckPartyDistance then Continue;
			
			//Combat Related
			if (IsUnderAttack) and CombatEnabled then begin
				//SetPoint_AoePosition;
				if CheckUse_HeroSelfBuffs then continue;
				if Action_CheckForCombatInitiation then continue;
				
				//	time to aoe?		//Dont allow titans to aoe in pvp.
				if (false) and not PvpLoaded then begin
					//Dont allow Titans to Aoe at all for now.
					
					//So here we are within 150 range of the aoe point.
					if (PvpLoaded) then begin
						if CheckUse_FinalSecret then continue;
						
						if CheckUse_Doombringer_Pvp_Buff then continue;
						
						//AOE Pvp
						if (SetTarget_MostClustered_Pvp) then
							Continue;
						
					end else begin
						//AOE PVE
						if (SetTarget_MostClustered_Pve) then
							Continue;
					end;
				
				//	if not aoe, then we single target!
				end else begin
				
					if (PvpLoaded) then begin
					
						if CheckUse_FinalSecret then continue;
						if CheckUse_Doombringer_Pvp_Buff then continue;
						
						//Check use Mass Disarm
						if (HasSkill_Ready(794)) then begin
							if (GetCount_DamageDealers_NearChar_Pvp(User, 200) > 4) then begin
								CUseSkill(794, false, false, Engine.GetFaceState(0));
							end;
						end;
						
						//Rush Impact
						if HasSkill_Ready(793) and (User.Mp > 25) and SetTarget_BestToStun_ByRange(350, 600, false) then begin
							CUseSkill(793, false, false, Engine.GetFaceState(0));
						end;
						
						//Single Target Pvp
						if SetTarget_MainAssist then 
							continue
						else if SetTarget_Best_Pvp then
							continue;
							
					end else begin
					
						
						//Rush Impact
						if HasSkill_Ready(793) and (User.Mp > 80) and SetTarget_BestToStun_ByRange(350, 600) then begin
							Engine.UseSkill(793);
						end;
					
						//Singe Target Pve
						if SetTarget_Pve then
							continue;
					end;
				
				end;
				
				
			//Non Combat Related
			end else begin
			
				if CheckMove_DeadParty_LeaderOnly() then continue;
				
				
			end;
			if CombatEnabled and not PvpLoaded and Mode_KillAll then CheckMode_KillAll;
			AutoFollow();
			
		except
			on E : EInvalidPointer do begin
				Print('Pointer Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
			
			on E : Exception do begin
				Print('Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
		end;
	end;
end;

procedure AutoDagger;
var
ma : Tl2Char;
oLiveTarget: Tl2Live;
oCharTarget: Tl2Char;
pauseMessageSent: Boolean;
begin
	pauseMessageSent := false;
	Print('Auto Dagger Started.');
	while true do begin
		Delay(400);	
		try		
			CheckRemove_BuffsByList;
			
			VoiceCommand_Listen;
			SetPvpStance;
			if DoActions or TotalPause or (User.Dead) then begin
				if not PvpLoaded then
					CheckBuffs_L2Idle;
				if not pauseMessageSent then begin
					Print('We are total paused');
					pauseMessageSent := true;
				end;
				Continue;
			end;
			pauseMessageSent := false;
			if not PvpLoaded and CheckBuffs_L2Idle then continue;
			
			PlayersNearby := IsOtherPlayersNearby(3000);
			SetPoint_PartyCenter;
			
			if (DiscreteMode) and (PlayersNearby) then Continue;
			if Mode_WaitForCasting then WaitForCasting;
			
		
			//	Before anything else, check our distance to party center
			//	As we shouldn't do anything unless party is close
			if CheckPartyDistance then Continue;
			
			//Combat Related
			if (IsUnderAttack) and CombatEnabled then begin
				//SetPoint_AoePosition;
				if CheckUse_HeroSelfBuffs then continue;
				if Action_CheckForCombatInitiation then continue;
				
				if (PvpLoaded) then begin
						
					if CheckUse_Dagger_Pvp_Buff then continue;
						
					//Single Target Pvp
					if SetTarget_MainAssist then 
						continue
					else if SetTarget_Best_Pvp then
						continue;
							
				end else begin
					//Singe Target Pve
						if SetTarget_Pve then
							continue;
				end;
				
				
			//Non Combat Related
			end else begin
			
				if CheckMove_DeadParty_LeaderOnly() then continue;
				
			end;
			if CombatEnabled and not PvpLoaded and Mode_KillAll then CheckMode_KillAll;
			AutoFollow();
			
		except
			on E : EInvalidPointer do begin
				Print('Pointer Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
			
			on E : Exception do begin
				Print('Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
		end;	
	end;
end;

procedure AutoSpoiler;
var
ma: Tl2Char;
begin
	Print('Auto Spoiler started.');
	
	SetPvpStance;
	while true do begin
		try
			VoiceCommand_Listen;
			DoActions;
			CheckSweep;
			if (User.Name = 'PowerSpoil') and (CharList.ByName('Trin1ty', ma)) then begin
			
				if not (ma.Target = nil) 
				and not (ma.Target.Dead)
				and (ma.Target.Attackable) then begin
						engine.SetTarget(ma.Target);
				end else begin
					if (User.DistTo(ma) > 100) then MoveTo_Timer(ma.x, ma.y, ma.z);
				end;
				
				
			
			end else if (User.name = 'Candy') and (CharList.ByName('Undisputed', ma)) then begin
				
				if not (ma.Target = nil) 
				and not (ma.Target.Dead)
				and (ma.Target.Attackable) then begin
						engine.SetTarget(ma.Target);
				end else begin
					if (User.DistTo(ma) > 100) then MoveTo_Timer(ma.x, ma.y, ma.z);
				end;
			end;
			Delay(750);
			
		except
			on E : EInvalidPointer do begin
				Print('Pointer Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
			
			on E : Exception do begin
				Print('Exception Caught;');
				Print('Message: ' + E.Message);
				Print('StackTrace: ' + E.StackTrace);
			end;
		end;
	end;
end;



//GODDES OF DESTRUCTION

procedure AutoFeoh;
var
ma : Tl2Char;
oLiveTarget: Tl2Live;
oCharTarget: Tl2Char;
pauseMessageSent, enteredAoePvp: Boolean;
begin
	pauseMessageSent := false;
	
	Print('Auto Feoh Started.');
	while true do begin
		Delay(100);		
		
		VoiceCommand_Listen;
		SetPvpStance;
		if DoActions or TotalPause or (User.Dead) then begin
			if not pauseMessageSent then begin
				Print('We are total paused');
				pauseMessageSent := true;
			end;
			
			Continue;
		end;
		pauseMessageSent := false;
		
		SetPoint_PartyCenter;
		
	
		//	Before anything else, check our distance to party center
		//	As we shouldn't do anything unless party is close
		if CheckPartyDistance then Continue;
		
		//Combat Related
		if (IsUnderAttack) and CombatEnabled then begin
			
			if (PvpLoaded) and CheckUse_Fear_Pvp_GOD(1100) then begin
				Print('Use the fuck fear god');
				Continue;
			end;
			
			if Action_CheckForCombatInitiation then begin
				Print('Start the fuck fighting');
				continue;
			end;
			
			//	time to aoe?		
			if (IsTime_ToAoe) and not PvpLoaded then begin
			
				//Print('Time to AOE! - PVE');
			
				if (CheckUse_ShadowSnare) then 
					continue;
			
				//AOE PVE
				if (SetTarget_MostClustered_Pve) then
					Continue;
			
			
			//	if not aoe, then we single target!
			end else begin
				
				if (PvpLoaded) then begin
					CheckUse_DeathHowl;
					
					
					//Single Target Pvp
					if SetTarget_MainAssist then begin
						Print('Take Main assist''s target');
						continue;
					end else if SetTarget_Best_Pvp then begin
						Print('Take my own target');
						continue;
					end else begin
						Print('No Target FOUND!!!!!!!!!');
					end;
				end else begin
					//Singe Target Pve
					if SetTarget_Pve then
						continue;
						
				end;
			
			end;
			
			
		//Non Combat Related
		end else begin
		
			if CheckMove_DeadParty_LeaderOnly() then continue;
			
			
		end;
		AutoFollow();
		if CombatEnabled and not PvpLoaded and Mode_KillAll then CheckMode_KillAll;
	end;
end;


procedure AutoAeore;
var
ma : Tl2Char;
pauseMessageSent: Boolean;
begin
	pauseMessageSent := false;
	Print('Auto Aeore Started.');
	while true do begin
		Delay(200);
		
		VoiceCommand_Listen;
		SetPvpStance;
		if DoActions or TotalPause or (User.Dead) then begin
			CheckDo_DeadActions_Healer1();
			
			if not pauseMessageSent then begin
				Print('We are total paused');
				pauseMessageSent := true;
			end;
			Continue;
		end;
		pauseMessageSent := false;
		
		SetPoint_PartyCenter;
		
		
		//Healing Related
		if not (IsTime_ToHeal) then begin
		
			if CheckUse_Rebirth_Healer1Only_V2 then continue;
				
			//if CheckUse_Cleanse_Healer1Only then continue;
			if HandleCleanse_Healer1Only then continue;
				
			if CheckUse_Recharge_Healer1Only(80) then continue;
			
			if CheckLeaderDistance(300) then continue;
		
			//What to do in Pvp if not healing?
			if IsUnderAttack and (PvpLoaded) and CombatEnabled then begin
			
				(*
				//Mana Burn
				if ManaMattersMode
				and HasSkill_Ready(1398)
				and (User.Mp > 45)
				and SetTarget_ToManaBurn then begin
					Engine.UseSkill(1398);
					continue;
				end;
				
				//Trance
				if (HasSkill_Ready(1394)) 
				and (SetTarget_BestCC_Pvp) then begin
					if not (IsTarget_Slept(User.Target)) then begin
						Engine.UseSkill(1394);
						Continue;
					end;
				end;
			*)
			end else begin
				
				//Pve, nothing atm
				
			end;
		end;
		
			
		//	Resurection?
		if HandleResurrection_Healer1Only then continue;
			
		//Check Sublime Self Sacrifice			
		if CheckUse_Rebirth_Healer1Only_V2 then continue;
			
			
		//	Balance Life/Heal?
		if not LowHpMode
		and CheckUse_BalanceLife_Healer1Only then begin
			Continue;
		end;
			
		//	Cleanse?
		//if CheckUse_Cleanse_Healer1Only then continue;
		if HandleCleanse_Healer1Only then continue;
			
			
			
		//	Brilliant Heal?
		if not PvpLoaded 		//Disable for pvp
		and not LowHpMode
		and HasSkill_Ready(11757) and not HasSkill_Ready(11828) //11828 = Progressive Heal
		and (IsTime_ToBrilliantHeal) then begin
			UseSkill_Safe(11757, user, false);
			Continue;
		end;
		
		if IsTime_ToHeal
		and not IsMy_TreeOfLifeUp
		and HasSkill_Ready(11774) 
		and TimerEx(Timer_TreeOfLife, 5000) then begin
			UseSkill_Safe(11774, user, false);
			Continue;
		end;
			
		if CheckUse_Recharge_Healer1Only(80) then continue;
		if CheckMove_DeadParty_LeaderOnly() then continue;
			
			
		AutoFollow();	
	end;
end;


procedure AutoYul;
var
ma : Tl2Char;
oLiveTarget: Tl2Live;
oCharTarget: Tl2Char;
pauseMessageSent, enteredAoePvp: Boolean;
begin
	pauseMessageSent := false;
	
	Print('Auto Yul Started.');
	while true do begin
		Delay(100);		
		
		VoiceCommand_Listen;
		SetPvpStance;
		if DoActions or TotalPause or (User.Dead) then begin
			if not pauseMessageSent then begin
				Print('We are total paused');
				pauseMessageSent := true;
			end;
			
			Continue;
		end;
		pauseMessageSent := false;
		
		SetPoint_PartyCenter;
		
	
		//	Before anything else, check our distance to party center
		//	As we shouldn't do anything unless party is close
		if CheckPartyDistance then Continue;
		
		
		if CombatEnabled and AA_BringMobsMode and not PvpLoaded and not isJava then begin
			if Action_PullMobs then continue;
		end;
		
		//Combat Related
		if (IsUnderAttack) and CombatEnabled then begin
			
			if Action_CheckForCombatInitiation then begin
				Print('Start the fuck fighting');
				continue;
			end;
			
			//	time to aoe?		
			if (IsTime_ToAoe) and not PvpLoaded then begin
			
				Print('Time to AOE! - PVE');
				//AOE PVE
				if (SetTarget_MostClustered_Pve) then
					Continue;
			
			
			//	if not aoe, then we single target!
			end else begin
				
				if (PvpLoaded) then begin					
					
					//Single Target Pvp
					if SetTarget_MainAssist then begin
						Print('Take Main assist''s target');
						continue;
					end else if SetTarget_Best_Pvp then begin
						Print('Take my own target');
						continue;
					end else begin
						Print('No Target FOUND!!!!!!!!!');
					end;
					
				end else begin
					//Singe Target Pve
					if SetTarget_Pve then
						continue;
						
				end;
			
			end;
			
			
		//Non Combat Related
		end else begin
		
			if CheckMove_DeadParty_LeaderOnly() then continue;
			
			
		end;
		AutoFollow();
		if CombatEnabled and not PvpLoaded and Mode_KillAll then CheckMode_KillAll;
	end;
end;



procedure AutoIss;
var
ma : Tl2Char;
oLiveTarget: Tl2Live;
oCharTarget: Tl2Char;
pauseMessageSent, enteredAoePvp: Boolean;
begin
	pauseMessageSent := false;
	
	Print('Auto Iss Started.');
	while true do begin
		Delay(100);		
		
		VoiceCommand_Listen;
		SetPvpStance;
		if DoActions or TotalPause or (User.Dead) then begin
			if not pauseMessageSent then begin
				Print('We are total paused');
				pauseMessageSent := true;
			end;
			
			Continue;
		end;
		pauseMessageSent := false;
		
		SetPoint_PartyCenter;
		
	
		//	Before anything else, check our distance to party center
		//	As we shouldn't do anything unless party is close
		if CheckPartyDistance then Continue;
		
		if CheckUseRez_Iss then continue;
		
		//Combat Related
		if (IsUnderAttack) and CombatEnabled then begin
			
			if Action_CheckForCombatInitiation then begin
				Print('Start the fuck fighting');
				continue;
			end;
			
			//	time to aoe?		
			if (IsTime_ToAoe) and not PvpLoaded then begin
			
				//Print('Time to AOE! - PVE');
				//AOE PVE
				if (SetTarget_MostClustered_Pve) then
					Continue;
			
			
			//	if not aoe, then we single target!
			end else begin
				
				if (PvpLoaded) then begin					
					
					//Single Target Pvp
					if SetTarget_MainAssist then begin
						Print('Take Main assist''s target');
						continue;
					end else if SetTarget_Best_Pvp then begin
						Print('Take my own target');
						continue;
					end else begin
						Print('No Target FOUND!!!!!!!!!');
					end;
					
				end else begin
					//Singe Target Pve
					if SetTarget_Pve then
						continue;
						
				end;
			
			end;
			
			
		//Non Combat Related
		end else begin
		
			if CheckMove_DeadParty_LeaderOnly() then continue;
			
			
		end;
		if not IsTime_ToPickup then
			AutoFollow();
		if CombatEnabled and not PvpLoaded and Mode_KillAll then CheckMode_KillAll;
	end;
end;



procedure AutoSigel;
var
ma : Tl2Char;
AgroMode, TargetFound: Boolean;
circleRoundNum: Integer;
pauseMessageSent: Boolean;
begin
	pauseMessageSent := false;
	Print('Auto Sigel Started.');
	AgroMode := false;
	circleRoundNum := 1;
	
	while true do begin
		Delay(200);		
		VoiceCommand_Listen;
		
		SetPvpStance;
		if DoActions or TotalPause or (User.Dead) then begin
			if not pauseMessageSent then begin
				Print('We are total paused');
				pauseMessageSent := true;
			end;
			Continue;
		end;
		pauseMessageSent := false;
		
		PlayersNearby := IsOtherPlayersNearby(3000);
		SetPoint_PartyCenter;
		TargetFound := false;
		
		if (DiscreteMode) and (PlayersNearby) then Continue;
		if Mode_WaitForCasting then WaitForCasting;
		
		//Handle Circle agro mode
		if (CircleAgroMode) then begin
			ma := GetTarget_MainAssist;
			Action_CircleAgroMove(circleRoundNum, ma);
			Inc(circleRoundNum);
		end else if (circleRoundNum > 1) then //Initialize movement pattern, if mode is suddenly off
			circleRoundNum := 1;
	
	
		//	Before anything else, check our distance to party center
		//	As we shouldn't do anything unless party is close
		if CheckPartyDistance then Continue;
		
		//Combat Related
		if (IsUnderAttack) and CombatEnabled then begin
			
			
			//	Pvp Combat
			if (PvpLoaded) then begin
				if CheckUse_HeroSelfBuffs then continue;
				
				CheckUse_HeroicValor_LeaderOnly;
				
				if (CheckUse_Tank_Pvp_Buff) then continue;
				
				if (CheckUse_SigelAoeAgro) then continue;
				
				if (SetTarget_ToAgro_Pvp) then begin
					AgroMode := true;
					TargetFound := true;
				
				end else if (SetTarget_Best_Pvp) then begin
					AgroMode := false;
					TargetFound := true;
				
				end else
					TargetFound := false;
				
				if (TargetFound) then begin
				
					if AgroMode and HasSkills_Ready_Any(18, 28, 985)	
					and UseSkill_Tank_Agro_Pvp then begin
						Continue;
						
					end else if CheckUse_Tank_MiscPvp_Skills() then begin
						continue;
					
					end else if HasSkills_Ready_Any(984, 92, 342, 353, 401, 403, 352)
					and UseSkill_Tank_Attack_Pvp then begin
						Continue;
					end else if Engine.Attack(50) then
						Continue;
				
				end else if CheckUse_Tank_MiscPvp_Skills() then 
					continue;
					
			//	Pve Combat
			end else begin
				
				if CheckUse_Tank_Pve_Buff then continue;
				
				if (CheckUse_SigelAoeAgro) then continue;
				if (CheckUse_CenterPull) then continue;
				
				if (SetTarget_ToAgro_Pve) then begin
					AgroMode := true;
					TargetFound := true;
				
				end else if (SetTarget_MostClustered_Pve) or (SetTarget_NearestAgroed_Pve) then begin
					AgroMode := false;
					TargetFound := true;
				
				end else
					TargetFound := false;
					
				
				if (TargetFound) then begin
					
					if AgroMode and HasSkills_Ready_Any(18, 28, 985) and (User.Mp > 10) 
					and UseSkill_Tank_Agro_Pve then begin
						Continue;
					end else if HasSkills_Ready_Any(984, 92, 401, 400, 352) and (User.Mp > 10)
					and UseSkill_Tank_Attack_Pve then begin
						Continue;
					end else if Engine.Attack(50) then 
						Continue;
					
				end;
			
			end;

			
		//Non Combat Related
		end else begin
		
			//	If anyone is dead, and we are not in combat,
			//	go to them, so the healers will get close and auto rez.
			if (CheckMove_DeadParty_LeaderOnly) then Continue;
			
			
		end;
		AutoFollow();
		
		if (User.Name = GetName_LocalLeader) then 
			CheckFindNewMob;
	end;
	
	
end;

function CheckPartyDistance: Boolean;
var
z: Integer;
begin	
	//Print('Check Party Dist Started');
	result := false;
	if (PARTY_PT_DIST > MAX_PARTY_PT_DIST) then begin
		Engine.CancelTarget;
		z := User.Z;
		//print('Move to party center at x,y = ' + IntToStr(PT_PX) + ', ' + IntToStr(PT_PY));
		AutoFollow;
		result := true;
	end;
	(*
	if (PARTY_PT_DIST > MAX_PARTY_PT_DIST) then begin
		LockCheck_MoveAndBot_Off;
		Engine.CancelTarget;
		z := User.Z;
		print('Move to party center at x,y = ' + IntToStr(PT_PX) + ', ' + IntToStr(PT_PY));
		MoveTo_Timer(PT_PX, PT_PY, z);
		Delay(1000);
		LockCheck_MoveAndBot_On;
		result := true;
	end;
	*)
	//Print('Check Party Dist Ended');
end;

be gin	
	InitializeVariables;
	SetWeaponEquipped();
	if (Mode_DetectSystemMessages) then Script.NewThread(@Detect_CannotSeeTarget);
	
	Print('Sub Party Leader = ' + GetName_SubPartyLeader(GetPartyNum) + ' and Party num = ' + IntToStr(GetPartyNum));
	Print('Local Leader is ' + GetName_LocalLeader);
	
	//if IsTarget_Leader(User.Name) and not (User.Name = GetName_Leader) then begin
		//Engine.AutoAcceptCC(GetName_Leader);
		//Print('Auto accepting CC requests from "' + GetName_Leader + '"');
	//end;
	
	//Script.NewThread(@Anti_EventPopup);
	
	if MODE_GOD then begin
		
		if IsClass_Iss(User.ClassID) then AutoIss;
		if IsClass_Aeore(User.ClassID) then AutoAeore;
		if IsClass_Sigel(User.ClassID) then AutoSigel;
		if IsClass_Feoh(User.ClassID) then AutoFeoh;
		if IsClass_Yul(User.ClassID) then AutoYul;
	
	end else begin
	
		
		if IsClass_Wl(User.ClassID) then AutoWarlord;
		if IsClass_Ol(User.ClassID) then AutoOverlord;
		if IsClass_Nuker(User.ClassID) then AutoNuker;
		if IsClass_Slh(User.ClassID) then AutoSoulHound;
		if IsClass_Tank(User.ClassID) then AutoTank;
		if IsClass_Bp(User.ClassID) then AutoBishop;
		if IsClass_Destro(User.ClassID) then AutoTitan;
		if IsClass_Spoiler(User.ClassID) then AutoSpoiler;
		if IsClass_Dagger(User.ClassID) then AutoDagger;
		if IsClass_Db(User.ClassID) then AutoDoombringer;
		if IsClass_Tyrant(User.ClassID) then AutoTyrant;
		if IsClass_Ee(User.ClassID) then AutoElvenElder;
		if IsClass_Archer(User.ClassID) then AutoArcher;
		if IsClass_SwsBd(User.ClassID) then AutoOffTank_SwsBd;
		if IsClass_Summoner(User.ClassID) then AutoSummoner;
		if IsClass_Judi(User.ClassID) then AutoJudi;
	end;
	print('Waring, class not recognized, running Voice commands and Actions only');
	while true do begin
		VoiceCommand_Listen;
		DoActions;
		SetPvpStance;
		AutoFollow;
		Delay(400);
	end;
	
	print('Error, script ended!?');
	
end.



