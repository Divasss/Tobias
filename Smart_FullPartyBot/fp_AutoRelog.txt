unit fp_AutoRelog;
interface

function Check_AutoRelog: Boolean; Overload;
function Check_AutoRelog(accName, accPass: string): Boolean; Overload;

implementation
uses
SysUtils, Classes;


function SendChar(cLetter: string): Boolean;
var
nKeyCode: Integer;
begin
	result := false;
	nKeyCode := GetKeyCodeFromLetter(cLetter);
	if (nKeyCode < 0) then begin 
		Print('SendChar failed: The input character is not recognized. Input char = ' + cLetter);
	end;
	
	if (Engine.SendMessage($102 , nKeyCode , 0) = 0) then
		result := true
	else begin
		Print('SendChar failed. Could not send char = ' + cLetter);
		result := false;
	end;
end;

function GetKeyCodeFromLetter(cLetter: string): Integer;
begin
	result := -1;
	
	case cLetter of 
		'tab': result := 9;
		'enter': result := 13;
	
		'0': result := 48;
		'1': result := 49;
		'2': result := 50;
		'3': result := 51;
		'4': result := 52;
		'5': result := 53;
		'6': result := 54;
		'7': result := 55;
		'8': result := 56;
		'9': result := 57;
		
		'A': result := 65;
		'B': result := 66;
		'C': result := 67;
		'D': result := 68;
		'E': result := 69;
		'F': result := 70;
		'G': result := 71;
		'H': result := 72;
		'I': result := 73;
		'J': result := 74;
		'K': result := 75;
		'L': result := 76;
		'M': result := 77;
		'N': result := 78;
		'O': result := 79;
		'P': result := 80;
		'Q': result := 81;
		'R': result := 82;
		'S': result := 83;
		'T': result := 84;
		'U': result := 85;
		'V': result := 86;
		'W': result := 87;
		'X': result := 88;
		'Y': result := 89;
		'Z': result := 90;
		
		'a': result := 97;
		'b': result := 98;
		'c': result := 99;
		'd': result := 100;
		'e': result := 101;
		'f': result := 102;
		'g': result := 103;
		'h': result := 104;
		'i': result := 105;
		'j': result := 106;
		'k': result := 107;
		'l': result := 108;
		'm': result := 109;
		'n': result := 110;
		'o': result := 111;
		'p': result := 112;
		'q': result := 113;
		'r': result := 114;
		's': result := 115;
		't': result := 116;
		'u': result := 117;
		'v': result := 118;
		'w': result := 119;
		'x': result := 120;
		'y': result := 121;
		'z': result := 122;
	
		
	end;
end;

function SendString(sMessage: string): Boolean;
var
i: Integer;
begin
	result := false;
	Print('Attempt to send sring "' + sMessage + '" with length = ' + IntToStr(Length(sMessage)));
	for i := 1 to Length(sMessage) do begin
		Print('SendString: Letter ' + IntToStr(i) + ' = "' + sMessage[i] + '"');
		if not SendChar(sMessage[i]) then begin
			Print('SendString failed. String = ' + sMessage);
			exit;
		end;
	end;
	result := true;
end;

function Login(userName, pass: string; CharIndex: Integer = -1): Boolean;
begin
	result := false;
	
	if (Engine.Status = lsOnline) then begin
		Print('Cannot login, We are already online?');
		Exit;
	end;
	
	if SendString(userName)
	and Engine.UseKey('Tab')
		
	and SendString(pass)
	and Engine.UseKey('Enter')
	and Delay(2000)
		
	and Engine.UseKey('Enter')
	and Delay(2000)
	
	and Engine.GameStart(CharIndex) then begin
		Print('Logged in succesfully');
		result := true;
	end;
	
end;

function PrintGameStatus(): void;
begin
	if (Engine.Status = lsOff) then print('lsOff')
	else if (Engine.Status = lsOffline) then print('lsOffline')
	else if (Engine.Status = lsOnline) then print('lsOnline')
	else print('Game status not recognized');
end;

function StartNewClient(): Boolean;
var
sFileName: PAnsiChar;
begin
	result := false;
	
	if (Engine.GameWindow > 0) then begin
		Print('Other game process detected, close the old one.');
		Engine.GameClose();
		Delay(1500);
	end;
	
	//sFileName := GetL2ExePath;
	
	//if (sFileName = '') then exit;
	if (GetPc = 2) then begin
		if (WinExec('D:\\Games\\Lineage 2\\Clients\\Lineage II - H5 - Idle\\system\\l2.exe', 1) >= 33)then begin
			result := true;	
		end;
	end else if (GetPc = 1)  then begin
		if (WinExec('D:\\Games\\Lineage 2\\Clients\\Lineage 2 - High Five - Idle\\system\\l2.exe', 1) >= 33)then begin
			result := true;	
		end;
	end else if (GetPc = 3)  then begin
		Print(WinExec('C:\\Games\\L2 H5\l2privat\\Lineage II\\l2.exe', 1));
		result := true;
	end;
end;

(*
function GetL2ExePath: PAnsiChar;
var
sFileName: string;
begin
	tempResult := '';
	//result := Addr(tempResult[1]);
	
	sFileName := 'D:\\Games\\Lineage 2\\Lineage 2 - High Five - Copy\\system\\l2.exe';
	if (FileExists(sFileName)) then begin
		result := 'D:\\Games\\Lineage 2\\Lineage 2 - High Five - Copy\\system\\l2.exe';
		exit;
	end;
	
	sFileName := 'D:\\Games\\Lineage 2\\Clients\\Lineage II - High Five\\system\\l2.exe';
	if (FileExists(sFileName)) then begin
		result := 'D:\\Games\\Lineage 2\\Clients\\Lineage II - High Five\\system\\l2.exe';
		exit;
	end;
	
	Print('GetL2ExePath: Warning, l2.exe is can not be found.');
end;
*)
function GetPc: Integer;
var
sFileName: string;
begin	
	result := 0;
	
	//Main PC , mine
	sFileName := 'D:\\Games\\Lineage 2\\Clients\\Lineage 2 - High Five - Idle\\system\\l2.exe';
	if (FileExists(sFileName)) then begin
		result := 1;
		exit;
	end;
	
	//Laptop
	sFileName := 'D:\\Games\\Lineage 2\\Clients\\Lineage II - H5 - Idle\\system\\l2.exe';
	if (FileExists(sFileName)) then begin
		result := 2;
		exit;
	end;
	
	sFileName := 'C:\\Games\\L2 H5\\l2privat\\Lineage II\\system\\l2.exe';
	if (FileExists(sFileName)) then begin
		result := 3;
		exit;
	end;
	
	Print('GetL2ExePath: Warning, l2.exe can not be found.');
end;

function WaitForClientToStart(): Boolean;
var
count: Integer;
begin
	result := false;
	count := 0;
	while (Engine.GameWindow <= 0) do begin
		Delay(1000);
		count := count + 1;
		if (count > 30) then begin
			result := false;
			Print('It took more than 30 seconds to start client..');
			exit;
		end;
	end;
	Delay(7000);
	Print('Client succesfuly loaded');
	
	result := true;
end;

function IsClientDead(control: Tl2Control): Boolean;
begin
	result := (control.Status = lsOff) or (control.Status = lsOffline);
end;

function WaitForCharacterLoad: Boolean;
var
count : Integer;
begin
	result := false;
	count := 0;
	while not (Engine.Status = lsOnline) do begin
		Delay(1000);
		count := count + 1;
		if (count > 20) then begin
			Print('Character loading timed out after 20 seconds...');
			result := false;
			exit;
		end;
	end;
	Delay(2000);
	result := true;
end;


function WinExec(lpCmdLine: PAnsiChar; nCmdShow: integer) : Integer; stdcall;
external 'kernel32.dll';

function GetAccountName: string;
begin
	result := '';
	
	if (User.Name = 'BlackJesus') then result := 'devling01';
	if (User.Name = 'Nastmine') then result := 'devling02';
	if (User.Name = 'FireSky') then result := 'devling03';
	if (User.Name = 'Ragnator') then result := 'devling04';
	if (User.Name = 'Kaballius') then result := 'devling05';
	if (User.Name = 'Ezekiel') then result := 'devling06';
	if (User.Name = 'iSky') then result := 'devling07';
	if (User.Name = 'Chaos') then result := 'devling08';
	if (User.Name = 'Trin1ty') then result := 'devling09';
	
	if (User.Name = 'Achilles') then result := 'devling11';
	if (User.Name = 'iPrancer') then result := 'devling12';
	if (User.Name = 'iCure') then result := 'devling13';
	if (User.Name = 'Tranquility') then result := 'devling14';
	if (User.Name = 'iSpike') then result := 'devling15';
	if (User.Name = 'iStorm') then result := 'devling16';
	if (User.Name = 'NewEra') then result := 'devling17';
	if (User.Name = 'iReinn') then result := 'devling18';
	if (User.Name = 'Igneous') then result := 'devling19';
	
	
	if (User.Name = 'Devling') then result := 'devling21';
	if (User.Name = 'EyeCandy') then result := 'devling22';
	if (User.Name = 'iSerenity') then result := 'devling23';
	if (User.Name = 'iSanity') then result := 'devling24';
	if (User.Name = 'iPain') then result := 'devling25';
	if (User.Name = 'Eviscerator') then result := 'devling26';
	if (User.Name = 'Undisputed') then result := 'devling27';
	if (User.Name = 'Insanity') then result := 'devling28';
	if (User.Name = 'iFury') then result := 'devling29';
	
	if (User.Name = 'Aristarchus') then result := 'devling10';
	if (User.Name = 'PowerSpoil') then result := 'devling20';
	if (User.Name = 'Sheiva') then result := 'devling30';
	
	if (User.Name = 'Candy') then result := 'devspo01';
	if (User.Name = 'Cotton') then result := 'devspo02';
	
	
	if (User.Name = 'Sheyrena') then result := 'devee01';
	if (User.Name = 'iCharger') then result := 'devee02';
	if (User.Name = 'Cherry') then result := 'devee03';
	if (User.Name = 'ManaUp') then result := 'devee04';
	if (User.Name = 'ManaGain') then result := 'devee05';
	if (User.Name = 'Tipsy') then result := 'devee06';
	if (User.Name = 'Gipsy') then result := 'devee07';
	if (User.Name = 'iRecovery') then result := 'devee08';
	if (User.Name = 'iLast') then result := 'devee09';
	
	
	if (User.Name = 'Devious') then result := 'devsph01';
	if (User.Name = 'iWind') then result := 'devsph02';
	if (User.Name = 'iLeech') then result := 'devsph03';
	if (User.Name = 'Mercedes') then result := 'devsph04';
	if (User.Name = 'iCapture') then result := 'devsph05';
	if (User.Name = 'Merciless') then result := 'devsph06';
	
	
	(*  Lineage 2 - Idle
	if (User.Name = 'BlackJesus') then result := 'devling13';
	if (User.Name = 'iSky') then result := 'devling01';
	if (User.Name = 'iNuke') then result := 'devling02';
	if (User.Name = 'Immortality') then result := 'devling15';
	if (User.Name = 'iSerenity') then result := 'devling03';
	if (User.Name = 'SaintHexagon') then result := 'devling04';
	if (User.Name = 'iPain') then result := 'devling16';
	if (User.Name = 'iPole') then result := 'devling14';
	if (User.Name = 'Ragnator') then result := 'devling09';
	
	if (User.Name = 'Devling') then result := 'devling20';
	if (User.Name = 'FireSky') then result := 'devling21';
	if (User.Name = 'iSanity') then result := 'devling22';
	if (User.Name = 'Undisputed') then result := 'devling23';
	if (User.Name = 'Insanity') then result := 'devling24';
	if (User.Name = 'Nastmine') then result := 'devling25';
	if (User.Name = 'Eviscerator') then result := 'devling27';
	if (User.Name = 'Tranquility') then result := 'devling28';
	if (User.Name = 'iFury') then result := 'devling29';
	
	if (User.Name = 'PowerSpoil') then result := 'devling10';
	if (User.Name = 'Sheyrena') then result := 'devling05';
	if (User.Name = 'Ezekiel') then result := 'devling06';
	
	if (User.Name = 'Hubba') then result := 'devsph01';
	if (User.Name = 'Bubba') then result := 'devsph02';
	if (User.Name = 'Gone') then result := 'devsph03';
	if (User.Name = 'iCycle') then result := 'devsph04';
	if (User.Name = 'iWeel') then result := 'devsph05';
	if (User.Name = 'WindThrower') then result := 'devsph06';
	if (User.Name = 'Catack') then result := 'devsph07';
	
	//3rd Party
	if (User.Name = 'iAchilles') then result := 'devling31';
	if (User.Name = 'Spiker') then result := 'devling32';
	if (User.Name = 'iPrancer') then result := 'devling33';
	if (User.Name = 'iCure') then result := 'devling34';
	if (User.Name = 'iBattery') then result := 'devling35';
	if (User.Name = 'iComet') then result := 'devling36';
	if (User.Name = 'Reinn') then result := 'devling37';
	if (User.Name = 'iChaos') then result := 'devling38';
	if (User.Name = 'NewEra') then result := 'devling39';
	*)
end;

function GetPassword: string;
begin
	result := 'devpl2204';
end;

function GetAccountQueueNum: Integer;
var
i: Integer;
control: Tl2Control;
begin
	result := -1;
	control := GetControlByIndex(0);
	i := 0;
	while Assigned(control) Do begin
		if (User.Name = control.GetUser.Name) then begin
			result := i;
			exit;
		end;
		Inc(i);
		control := GetControlByIndex(i);
	end;
end;

function IAmNextInQueue(queueNum: Integer): Boolean;
var
i: Integer;
control: Tl2Control;
begin
	result := true;
	for i := 0 to queueNum - 1 do begin
		control := GetControlByIndex(i);
		if Assigned(control) and IsClientDead(control) then begin
			//If any account before ourself, is dead, allow that earlier account to load 1st
			result := false;
		end;
	
	end;
end;

function Check_AutoRelog: Boolean; Overload;
var
accName, accPass: string;
queueNum: Integer;
begin
	result := false;
	
	if IsClientDead(Engine) then begin
		result := true;
		queueNum := GetAccountQueueNum;
		
		if (queueNum < 0) then begin
			Print('Account Queue Num not recognized!');
			exit;		
		end;
		
		//Make sure that only 1 account can load the game at a time
		if IAmNextInQueue(queueNum) and (ShMem[0] = 0) then begin
			try
				ShMem[0] := 1;
				Print('Initiate AutoRelog');
				
				accName := GetAccountName; 
				accPass := GetPassword; 
				
				if (accName = '') or (accPass = '') then begin
					Print('Login account is not found');
					ShMem[0] := 0;
					exit;
				end;
				
				
				
				if not StartNewClient then begin
					Print('Starting new client failed');
					ShMem[0] := 0;
					exit;
				end;
					
				if not WaitForClientToStart() then begin
					Print('Waiting for client failed');
					ShMem[0] := 0;
					exit;
				end;
				
					
				if not Login(accName, accPass, -1) then begin
					Print('Login failed');
					ShMem[0] := 0;
					exit;
				end;
					
				if not WaitForCharacterLoad() then begin
					Print('Wait for character login failed');
					ShMem[0] := 0;
					exit;
				end;
				Print('Succesfully logged in');
			finally
				//Guarantee to reset ShMem[0]
				Print('Auto Relog Ended');
				ShMem[0] := 0;
			end;
		end else begin
		
			Print('Another account is being loaded... Delay...');
			Delay(3000 + Random(5000)); //Delay 3-8 seconds
			
		end;
	end;
end;


function Check_AutoRelog(accName, accPass: string): Boolean; Overload;
var
queueNum: Integer;
begin
	result := false;
	
	if IsClientDead(Engine) then begin
		result := true;
		queueNum := GetAccountQueueNum;
		
		if (queueNum < 0) then begin
			Print('Account Queue Num not recognized!');
			exit;		
		end;
		
		//Make sure that only 1 account can load the game at a time
		if IAmNextInQueue(queueNum) and (ShMem[0] = 0) then begin
			try
				ShMem[0] := 1;
				Print('Initiate AutoRelog'); 
				
				if (accName = '') or (accPass = '') then begin
					Print('Login account is not found');
					ShMem[0] := 0;
					exit;
				end;
				
				
				
				if not StartNewClient then begin
					Print('Starting new client failed');
					ShMem[0] := 0;
					exit;
				end;
					
				if not WaitForClientToStart() then begin
					Print('Waiting for client failed');
					ShMem[0] := 0;
					exit;
				end;
				
					
				if not Login(accName, accPass, -1) then begin
					Print('Login failed');
					ShMem[0] := 0;
					exit;
				end;
					
				if not WaitForCharacterLoad() then begin
					Print('Wait for character login failed');
					ShMem[0] := 0;
					exit;
				end;
				Print('Succesfully logged in');
			finally
				//Guarantee to reset ShMem[0]
				Print('Auto Relog Ended');
				ShMem[0] := 0;
			end;
		end else begin
		
			Print('Another account is being loaded... Delay...');
			Delay(3000 + Random(5000)); //Delay 3-8 seconds
			
		end;
	end;
end;

(*
begin

	while true do begin
		if (Engine.Status = lsOff) or (Engine.Status = lsOffline) or IsClientDead then begin
			if not StartNewClient then begin
				Print('Starting new client failed');
				continue;
			end;
			
			if not WaitForClientToStart() then begin
				Print('Waiting for client failed');
				continue;
			end;
			
			if not Login('devling21', 'devpl2204', -1) then begin
				Print('Login failed');
				Continue;
			end;
			
			if not WaitForCharacterLoad() then begin
				Print('Wait for character login failed');
				Continue;
			end;
			Print('Succesfully logged in');
		end;
			//if Engine.GameClientReady
		Del *)

end.